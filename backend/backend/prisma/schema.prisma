

// Account Card (Cari Hesap) Models
model AccountCard {
  id              Int                       @id @default(autoincrement())
  code            String                    @unique @db.VarChar(20) // M-00001, T-00001, C-00001
  name            String                    @db.VarChar(200)
  type            String                    @db.VarChar(20) // customer, supplier, both
  taxNumber       String?                   @db.VarChar(20)
  taxOffice       String?                   @db.VarChar(100)
  phone           String?                   @db.VarChar(20)
  email           String?                   @db.VarChar(100)
  address         String?                   @db.Text
  city            String?                   @db.VarChar(50)
  district        String?                   @db.VarChar(50)
  postalCode      String?                   @db.VarChar(10)
  country         String?                   @db.VarChar(50)  @default("Türkiye")
  contactPerson   String?                   @db.VarChar(100)
  contactPhone    String?                   @db.VarChar(20)
  contactEmail    String?                   @db.VarChar(100)
  website         String?                   @db.VarChar(200)
  notes           String?                   @db.Text
  balance         Float                     @default(0) // Güncel bakiye (+ borç, - alacak)
  creditLimit     Float?                    // Kredi limiti
  paymentTerm     Int?                      // Ödeme vadesi (gün)
  discountRate    Float?                    // Ýskonto oraný (%)
  isActive        Boolean                   @default(true)
  createdBy       Int
  companyId       Int
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
  company         Company                   @relation("CompanyAccountCards", fields: [companyId], references: [id])
  user            User                      @relation("AccountCardCreator", fields: [createdBy], references: [id])
  transactions    AccountCardTransaction[]
  invoices        Invoice[]                 @relation("AccountCardInvoices")
  expenses        Expense[]                 @relation("AccountCardExpenses")

  @@index([companyId])
  @@index([type])
  @@index([isActive])
  @@index([balance])
  @@index([code])
}

model AccountCardTransaction {
  id              Int           @id @default(autoincrement())
  accountCardId   Int
  type            String        @db.VarChar(10) // debit (borç), credit (alacak)
  amount          Float
  date            DateTime
  dueDate         DateTime?     // Vade tarihi
  description     String        @db.Text
  referenceType   String?       @db.VarChar(20) // invoice, payment, expense, manual
  referenceId     Int?          // Ýlgili invoice, payment, expense ID
  createdBy       Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  accountCard     AccountCard   @relation(fields: [accountCardId], references: [id], onDelete: Cascade)
  user            User          @relation("TransactionCreator", fields: [createdBy], references: [id])

  @@index([accountCardId])
  @@index([type])
  @@index([date])
  @@index([dueDate])
}
